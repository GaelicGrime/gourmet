#!/usr/bin/env /usr/bin/zsh


AFTER_LINES=1
APP_NAME="GIMP3"
BEFORE_LINES=1

#BUILD_CMD="make"
#BUILD_OPTIONS=("-bik")
#CLEAN_CMD="make"
#CLEAN_OPTIONS=("clean")
#CONFIG_CMD="./autogen.sh"
#CONFIG_OPTIONS=("--prefix" "/home/liam/.local/" "--enable-gi-docgen" "--enable-g-ir-doc")
#INSTALL_CMD="make"
#INSTALL_OPTIONS=("install")
BUILD_CMD="ninja"
BUILD_OPTIONS=("-C" "_build_")
CLEAN_CMD="rm"
CLEAN_OPTIONS=("-rf" "_build_")
CONFIG_CMD="meson"
CONFIG_OPTIONS=("setup" "_build_" "--prefix" "/zopt")
GOGO="yes"
INSTALL_CMD="ninja"
INSTALL_OPTIONS=("-C" "_build_" "install")
LAST_OPTION="none"
LOG_NAME="none"
LOG_PATH="/storage/logs/build"
START_DIR="/zopt/src/gimp"
THIS_BUILD_TITLE="Make $APP_NAME"
THIS_TITLE="All things $APP_NAME"


checkLogPath() {
  setLogName "check"
  if [[ ! -d "$LOG_PATH" ]]
  then
    mkdir -p "$LOG_PATH"
  fi
}


setLogName() {
  export NOW="$(date +%Y%m%d.%H%M%S)"
  export LOG_NAME="$LOG_PATH/$NOW.$1.text"
  export LAST_OPTION="$1"
}


buildMe() {
  setLogName "build"
  $BUILD_CMD $BUILD_OPTIONS |& tee -a $LOG_NAME
}


cleanMe() {
  setLogName "clean"
  $CLEAN_CMD $CLEAN_OPTIONS |& tee -a $LOG_NAME
}


configureMe() {
  setLogName "reconfigure"
  $CONFIG_CMD $CONFIG_OPTIONS |& tee -a $LOG_NAME
  export GOGO="yes"
}


grepError() {
  grep -a$AFTER_LINES -b$BEFORE_LINES -i -e "error" "$LOG_NAME" | "$PAGER"
}


grepErrorWarning() {
  grep -a$AFTER_LINES -b$BEFORE_LINES -i -e "error" -e "warning" "$LOG_NAME" | "$PAGER"
}


installMe() {
  setLogName "install"
  $INSTALL_CMD $INSTALL_OPTIONS |& tee -a $LOG_NAME
}


viewRaw() {
  "$PAGER" "$LOG_NAME"
}


grepWarning() {
  grep -a$AFTER_LINES -b$BEFORE_LINES -i -e "warning" "$LOG_NAME" | "$PAGER"
}


questionMe() {
  zenity \
    --width=500 \
    --height=400 \
    --list \
    --title="$THIS_TITLE" \
    --text="Do you want to: (last option was $LAST_OPTION)" \
    --radiolist \
    --column="Check" \
    --column="Value" \
    --column="OPERATION" \
    --column="Option" \
    --hide-column=2 \
    FALSE "Clean"       "Clean"       "Clean for fresh start" \
    FALSE "ReConfigure" "ReConfigure" "Run $CONFIG_CMD $CONFIG_OPTIONS." \
    FALSE "Build"       "Build"       "$THIS_BUILD_TITLE" \
    FALSE "Install"     "Install"     "Install $APP_NAME." \
    FALSE "ErrorWarn"   "ErrorWarn"   "View the error and warning grepped log." \
    FALSE "Error"       "Error"       "View the error grepped log." \
    FALSE "Raw"         "Raw"         "View the raw log." \
    FALSE "Warning"     "Warning"     "View the warning grepped log." \
    TRUE "Quit" "Quit" "Quit."
}


main() {
  while [[ "$GOGO" == "yes" ]] ; do
    ans=$(questionMe)
    echo "Starting '$ans'"
    case $ans in
      "Build")
        buildMe
        ;;
      "Clean")
        cleanMe
        ;;
      "ErrorWarn")
        grepErrorWarning
        ;;
      "Error")
        grepError
        ;;
      "Install")
        installMe
        ;;
      "Raw")
        viewRaw
        ;;
      "ReConfigure")
        configureMe
        ;;
      "Warning")
        grepWarning
        ;;
      "Quit")
        GOGO="no"
        ;;
    esac
    echo "Done '$ans'"
done
}


cd $START_DIR

checkLogPath
main


unset AFTER_LINES
unset APP_NAME
unset BEFORE_LINES
unset BUILD_CMD
unset BUILD_OPTIONS
unset CLEAN_CMD
unset CLEAN_OPTIONS
unset CONFIG_CMD
unset CONFIG_OPTIONS
unset GOGO
unset INSTALL_CMD
unset INSTALL_OPTIONS
unset LAST_OPTION
unset LOG_NAME
unset START_DIR
unset THIS_BUILD_TITLE
unset THIS_TITLE


echo "Thanks for playing with me today"




#
