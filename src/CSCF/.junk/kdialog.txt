Usage: kdialog [options] [arg]
KDialog can be used to show nice dialog boxes from shell scripts

Options:
  -h, --help                        Displays help on commandline options.
  --help-all                        Displays help including Qt specific
                                    options.
  -v, --version                     Displays version information.
  --author                          Show author information.
  --license                         Show license information.
  --desktopfile <file name>         The base file name of the desktop entry for
                                    this application.
  --yesno <text>                    Question message box with yes/no buttons
  --yesnocancel <text>              Question message box with yes/no/cancel
                                    buttons
  --warningyesno <text>             Warning message box with yes/no buttons
  --warningcontinuecancel <text>    Warning message box with continue/cancel
                                    buttons
  --warningyesnocancel <text>       Warning message box with yes/no/cancel
                                    buttons
  --ok-label <text>                 Use text as OK button label
  --yes-label <text>                Use text as Yes button label
  --no-label <text>                 Use text as No button label
  --cancel-label <text>             Use text as Cancel button label
  --continue-label <text>           Use text as Continue button label
  --sorry <text>                    'Sorry' message box
  --detailedsorry <text> <details>  'Sorry' message box with expandable Details
                                    field
  --error <text>                    'Error' message box
  --detailederror <text> <details>  'Error' message box with expandable Details
                                    field
  --msgbox <text>                   Message Box dialog
  --inputbox <text> <init>          Input Box dialog
  --imgbox <file>                   Image Box dialog
  --imginputbox <file> <text>       Image Box Input dialog
  --password <text>                 Password dialog
  --newpassword <text>              New Password dialog
  --textbox <file>                  Text Box dialog
  --textinputbox <text> <init>      Text Input Box dialog
  --combobox <text>                 ComboBox dialog
  --menu <text>                     Menu dialog
  --checklist <text>                Check List dialog
  --radiolist <text>                Radio List dialog
  --passivepopup <text> <timeout>   Passive Popup
  --icon <icon>                     Popup icon
  --getopenfilename                 File dialog to open an existing file
                                    (arguments [startDir] [filter])
  --getsavefilename                 File dialog to save a file (arguments
                                    [startDir] [filter])
  --getexistingdirectory            File dialog to select an existing directory
                                    (arguments [startDir])
  --getopenurl                      File dialog to open an existing URL
                                    (arguments [startDir] [filter])
  --getsaveurl                      File dialog to save a URL (arguments
                                    [startDir] [filter])
  --geticon                         Icon chooser dialog (arguments [group]
                                    [context])
  --progressbar <text>              Progress bar dialog, returns a D-Bus
                                    reference for communication
  --getcolor                        Color dialog to select a color
  --format <text>                   Allow --getcolor to specify output format
  --title <text>                    Dialog title
  --default <text>                  Default entry to use for combobox, menu,
                                    color, and calendar
  --multiple                        Allows the --getopenurl and
                                    --getopenfilename options to return multiple
                                    files
  --separate-output                 Return list items on separate lines (for
                                    checklist option and file open with
                                    --multiple)
  --print-winid                     Outputs the winId of each dialog
  --dontagain <file:entry>          Config file and option name for saving the
                                    "do-not-show/ask-again" state
  --slider <text>                   Slider dialog box, returns selected value
  --dateformat <text>               Date format for calendar result and/or
                                    default value (Qt-style); defaults to 'ddd
                                    MMM d yyyy'
  --calendar <text>                 Calendar dialog box, returns selected date
  --attach <winid>                  Makes the dialog transient for an X app
                                    specified by winid
  --embed <winid>                   A synonym for --attach
  --geometry <geometry>             Dialog geometry:
                                    [=][<width>{xX}<height>][{+-}<xoffset>{+-}<y
                                    offset>]

Arguments:
  [arg]                             Arguments - depending on main option





# shortcut to set a dialog property
set_dialog_property() {
    qdbus ${1} org.freedesktop.DBus.Properties.Set \
        org.kde.kdialog.ProgressDialog "${2}" "${3}" > /dev/null
}

# start the dialog and store the DBus service and object path for
# communication
dialog=$(kdialog --progressbar 'Doing something')

# set maximum value, used to calculate filling level
set_dialog_property "${dialog}" maximum 100
# enable automatical closing, once maximum value is reached.  If not
# enabled, the dialog must be closed manually using the
# org.kde.kdialog.ProgressDialog.close method.
set_dialog_property "${dialog}" autoClose true
# enable cancel button.  Note, that this button is *not* affected by the
# autoClose property.  The dialog *never* closes automatically, if the
# cancel button is pressed.
qdbus ${dialog} org.kde.kdialog.ProgressDialog.showCancelButton true > /dev/null

for ((counter=1; counter <= 100; counter++)); do
    # check if the dialog was cancelled, and exit the loop in this case
    cancelled=$(qdbus $dialog org.kde.kdialog.ProgressDialog.wasCancelled)
    if [[ "${cancelled}" == "true" ]]; then
        echo "cancelled"
        # manually close the dialog
        qdbus ${dialog} org.kde.kdialog.ProgressDialog.close > /dev/null
        exit 1
    fi
    sleep 1
    # refresh value and label
    set_dialog_property "${dialog}" value "${counter}"
        "Step ${counter}" > /dev/null
    qdbus ${dialog} org.kde.kdialog.ProgressDialog.setLabelText \
done





qdbus org.kde.kdialog-557592 "/" value 2



kdialog --title="hello" --progressbar "how are you" 5                                                                                                                                                                            ✘ 130
org.kde.kdialog-605714 /ProgressDialog



qdbus org.kde.kdialog-605714 /ProgressDialog org.kde.kdialog.ProgressDialog.setLabelText

qdbus org.kde.kdialog-605714 /ProgressDialog org.freedesktop.DBus.Properties.Set \
  org.kde.kdialog.ProgressDialog "value" "1" "Step 1"


works like a boss‼

kdialog --title="hello" --progressbar "how are you" 10

»»org.kde.kdialog-605714 /ProgressDialog
»»org.kde.kdialog-616463 /ProgressDialog

qdbus org.kde.kdialog-605714 /ProgressDialog org.kde.kdialog.ProgressDialog.value 2
qdbus org.kde.kdialog-616463 /ProgressDialog org.kde.kdialog.ProgressDialog.value 2
qdbus org.kde.kdialog-605714 /ProgressDialog org.kde.kdialog.ProgressDialog.wasCancelled
qdbus org.kde.kdialog-616463 /ProgressDialog org.kde.kdialog.ProgressDialog.close
qdbus org.kde.kdialog-1150193 /ProgressDialog org.kde.kdialog.ProgressDialog.value 2

(%) qdbus "org.kde.kdialog-1600287" "/ProgressDialog" "org.kde.kdialog.ProgressDialog.value" "1"


qdbus org.kde.kdialog-1150799 /ProgressDialog org.kde.kdialog.ProgressDialog.showCancelButton true

Anything wrong returncode will be non zero


 qdbus [--system] [--bus busaddress] [--literal] [servicename] [path] [method] [args]



<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node>
  <interface name="org.kde.kdialog.ProgressDialog">
    <property name="maximum" type="i" access="readwrite"/>
    <property name="value" type="i" access="readwrite"/>
    <property name="autoClose" type="b" access="readwrite"/>
    <method name="setLabelText">
      <arg type="s" name="label" direction="in"/>
    </method>
    <method name="showCancelButton">
      <arg name="value" type="b" direction="in"/>
    </method>
    <method name="wasCancelled">
      <arg type="b" direction="out"/>
    </method>
    <method name="close"/>
  </interface>
</node>


   parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("yesno"), i18n("Question message box with yes/no buttons"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("yesnocancel"), i18n("Question message box with yes/no/cancel buttons"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("warningyesno"), i18n("Warning message box with yes/no buttons"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("warningcontinuecancel"), i18n("Warning message box with continue/cancel buttons"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("warningyesnocancel"), i18n("Warning message box with yes/no/cancel buttons"), QStringLiteral("text")));

    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("ok-label"), i18n("Use text as OK button label"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("yes-label"), i18n("Use text as Yes button label"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("no-label"), i18n("Use text as No button label"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("cancel-label"), i18n("Use text as Cancel button label"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("continue-label"), i18n("Use text as Continue button label"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("sorry"), i18n("'Sorry' message box"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("detailedsorry"), i18n("'Sorry' message box with expandable Details field"), QStringLiteral("text> <details")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("error"), i18n("'Error' message box"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("detailederror"), i18n("'Error' message box with expandable Details field"), QStringLiteral("text> <details")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("msgbox"), i18n("Message Box dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("inputbox"), i18n("Input Box dialog"), QStringLiteral("text> <init")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("imgbox"), i18n("Image Box dialog"), QStringLiteral("file")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("imginputbox"), i18n("Image Box Input dialog"), QStringLiteral("file> <text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("password"), i18n("Password dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("newpassword"), i18n("New Password dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("textbox"), i18n("Text Box dialog"), QStringLiteral("file")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("textinputbox"), i18n("Text Input Box dialog"), QStringLiteral("text> <init")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("combobox"), i18n("ComboBox dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("menu"), i18n("Menu dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("checklist"), i18n("Check List dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("radiolist"), i18n("Radio List dialog"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("passivepopup"), i18n("Passive Popup"), QStringLiteral("text> <timeout")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("icon"), i18n("Popup icon"), QStringLiteral("icon")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("getopenfilename"), i18n("File dialog to open an existing file (arguments [startDir] [filter])")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("getsavefilename"), i18n("File dialog to save a file (arguments [startDir] [filter])")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("getexistingdirectory"), i18n("File dialog to select an existing directory (arguments [startDir])")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("getopenurl"), i18n("File dialog to open an existing URL (arguments [startDir] [filter])")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("getsaveurl"), i18n("File dialog to save a URL (arguments [startDir] [filter])")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("geticon"), i18n("Icon chooser dialog (arguments [group] [context])")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("progressbar"), i18n("Progress bar dialog, returns a D-Bus reference for communication"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("getcolor"), i18n("Color dialog to select a color")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("format"), i18n("Allow --getcolor to specify output format"), QStringLiteral("text")));
    // TODO gauge stuff, reading values from stdin
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("title"), i18n("Dialog title"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("default"), i18n("Default entry to use for combobox, menu, color, and calendar"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("multiple"), i18n("Allows the --getopenurl and --getopenfilename options to return multiple files")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("separate-output"), i18n("Return list items on separate lines (for checklist option and file open with --multiple)")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("print-winid"), i18n("Outputs the winId of each dialog")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("dontagain"), i18n("Config file and option name for saving the \"do-not-show/ask-again\" state"),
    QStringLiteral("file:entry")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("slider"), i18n("Slider dialog box, returns selected value"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("dateformat"), i18n("Date format for calendar result and/or default value (Qt-style); defaults to 'ddd MMM d yyyy'"), QStringLiteral("text")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("calendar"), i18n("Calendar dialog box, returns selected date"), QStringLiteral("text")));
    /* kdialog originally used --embed for attaching the dialog box.  However this is misleading and so we changed to --attach.
     * For backwards compatibility, we silently map --embed to --attach */
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("attach"), i18n("Makes the dialog transient for an X app specified by winid"), QStringLiteral("winid")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("embed"), i18n("A synonym for --attach"), QStringLiteral("winid")));
    parser.addOption(QCommandLineOption(QStringList() << QStringLiteral("geometry"), i18n("Dialog geometry: [=][<width>{xX}<height>][{+-}<xoffset>{+-}<yoffset>]"), QStringLiteral("geometry")));

    parser.addPositionalArgument(QStringLiteral("[arg]"), i18n("Arguments - depending on main option"));


−−yesno text

Question message box with yes/no buttons

−−yesnocancel text

Question message box with yes/no/cancel buttons

−−warningyesno text

Warning message box with yes/no buttons

−−warningcontinuecancel text

Warning message box with continue/cancel buttons

−−warningyesnocancel text

Warning message box with yes/no/cancel buttons

−−sorry text

’Sorry’ message box

−−error text

’Error’ message box

−−msgbox text

Message Box dialog

−−inputbox text init

Input Box dialog

−−password text

Password dialog

−−textbox file [width] [height]

Text Box dialog

−−menu text [tag item] [tag item] ...

Menu dialog

−−checklist text [tag item status] ...

Check List dialog

−−radiolist text [tag item status] ...

Radio List dialog

−−title text

Dialog title

−−separate−output

Return list items on separate lines (for checklist option)

Arguments:


arg


Arguments - depending on main option


Generic options:


−−help


Show help about options


−−help−qt

Show Qt specific options

−−help−kde

Show KDE specific options

−−help−all

Show all options

−−author

Show author information

−v, −−version

Show version information

−−license

Show license information


−−


End of options


Qt options:
−−display displayname

Use the X-server display displayname.

−−session sessionId

Restore the application for the given sessionId.


−−cmap


Causes the application to install a private color map on an 8-bit display.

−−ncols count

Limits the number of colors allocated in the color cube on an 8-bit display, if the application is using the QApplication::ManyColor color specification.

−−nograb

tells Qt to never grab the mouse or the keyboard.

−−dograb

running under a debugger can cause an implicit −nograb, use −dograb to override.


−−sync


switches to synchronous mode for debugging.


−−fn, −−font fontname

defines the application font.

-−bg, −−background color

sets the default background color and an application palette (light and dark shades are calculated).

−−fg, −−foreground color

sets the default foreground color.

−−btn,−−button color

sets the default button color.

−−name name

sets the application name.

−−title title

sets the application title (caption).

−−visual TrueColor

forces the application to use a TrueColor visual on an 8-bit display.

−−inputstyle inputstyle

sets XIM (X Input Method) input style. Possible values are onthespot, overthespot, offthespotandroot.

−−im XIM-server

set XIM server.

−−noxim

disable XIM.

−−reverse

mirrors the whole layout of widgets.

KDE options:
−−caption caption

Use caption as name in the titlebar.

−−icon icon

Use icon as the application icon.

−−miniicon icon

Use icon as the icon in the titlebar.

−−config filename

Use alternative configuration file.

−−dcopserver server

Use the DCOP Server specified by server.

−−nocrashhandler

Disable crash handler, to get core dumps.

−−waitforwm

Waits for a WM_NET compatible windowmanager.

−−style style

sets the application GUI style.

−−geometry geometry

sets the client geometry of the main widget.





(%) kdialog --help-all
Usage: kdialog [options] [arg]
KDialog can be used to show nice dialog boxes from shell scripts

Options:
  -h, --help                           Displays help on commandline options.
  --help-all                           Displays help including Qt specific
                                       options.
  -v, --version                        Displays version information.
  --author                             Show author information.
  --license                            Show license information.
  --desktopfile <file name>            The base file name of the desktop entry
                                       for this application.
  --yesno <text>                       Question message box with yes/no buttons
  --yesnocancel <text>                 Question message box with yes/no/cancel
                                       buttons
  --warningyesno <text>                Warning message box with yes/no buttons
  --warningcontinuecancel <text>       Warning message box with continue/cancel
                                       buttons
  --warningyesnocancel <text>          Warning message box with yes/no/cancel
                                       buttons
  --ok-label <text>                    Use text as OK button label
  --yes-label <text>                   Use text as Yes button label
  --no-label <text>                    Use text as No button label
  --cancel-label <text>                Use text as Cancel button label
  --continue-label <text>              Use text as Continue button label
  --sorry <text>                       'Sorry' message box
  --detailedsorry <text> <details>     'Sorry' message box with expandable
                                       Details field
  --error <text>                       'Error' message box
  --detailederror <text> <details>     'Error' message box with expandable
                                       Details field
  --msgbox <text>                      Message Box dialog
  --inputbox <text> <init>             Input Box dialog
  --imgbox <file>                      Image Box dialog
  --imginputbox <file> <text>          Image Box Input dialog
  --password <text>                    Password dialog
  --newpassword <text>                 New Password dialog
  --textbox <file>                     Text Box dialog
  --textinputbox <text> <init>         Text Input Box dialog
  --combobox <text>                    ComboBox dialog
  --menu <text>                        Menu dialog
  --checklist <text>                   Check List dialog
      "index" "description" on/off
  --radiolist <text>                   Radio List dialog
  --passivepopup <text> <timeout>      Passive Popup
  --icon <icon>                        Popup icon
  --getopenfilename                    File dialog to open an existing file
                                       (arguments [startDir] [filter])
  --getsavefilename                    File dialog to save a file (arguments
                                       [startDir] [filter])
  --getexistingdirectory               File dialog to select an existing
                                       directory (arguments [startDir])
  --getopenurl                         File dialog to open an existing URL
                                       (arguments [startDir] [filter])
  --getsaveurl                         File dialog to save a URL (arguments
                                       [startDir] [filter])
  --geticon                            Icon chooser dialog (arguments [group]
                                       [context])
  --progressbar <text>                 Progress bar dialog, returns a D-Bus
                                       reference for communication
  --getcolor                           Color dialog to select a color
  --format <text>                      Allow --getcolor to specify output
                                       format
  --title <text>                       Dialog title
  --default <text>                     Default entry to use for combobox, menu,
                                       color, and calendar
  --multiple                           Allows the --getopenurl and
                                       --getopenfilename options to return
                                       multiple files
  --separate-output                    Return list items on separate lines (for
                                       checklist option and file open with
                                       --multiple)
  --print-winid                        Outputs the winId of each dialog
  --dontagain <file:entry>             Config file and option name for saving
                                       the "do-not-show/ask-again" state
  --slider <text>                      Slider dialog box, returns selected
                                       value
  --dateformat <text>                  Date format for calendar result and/or
                                       default value (Qt-style); defaults to
                                       'ddd MMM d yyyy'
  --calendar <text>                    Calendar dialog box, returns selected
                                       date
  --attach <winid>                     Makes the dialog transient for an X app
                                       specified by winid
  --embed <winid>                      A synonym for --attach
  --geometry <geometry>                Dialog geometry:
                                       [=][<width>{xX}<height>][{+-}<xoffset>{+-
                                       }<yoffset>]
  --qmljsdebugger <value>              Activates the QML/JS debugger with a
                                       specified port. The value must be of
                                       format port:1234[,block]. "block" makes
                                       the application wait for a connection.
  --platform <platformName[:options]>  QPA plugin. See QGuiApplication
                                       documentation for available options for
                                       each plugin.
  --platformpluginpath <path>          Path to the platform plugins.
  --platformtheme <theme>              Platform theme.
  --plugin <plugin>                    Additional plugins to load, can be
                                       specified multiple times.
  --qwindowgeometry <geometry>         Window geometry for the main window,
                                       using the X11-syntax, like 100x100+50+50.
  --qwindowicon <icon>                 Default window icon.
  --qwindowtitle <title>               Title of the first window.
  --reverse                            Sets the application's layout direction
                                       to Qt::RightToLeft (debugging helper).
  --session <session>                  Restores the application from an earlier
                                       session.
  --display <display>                  Display name, overrides $DISPLAY.
  --name <name>                        Instance name according to ICCCM
                                       4.1.2.5.
  --nograb                             Disable mouse grabbing (useful in
                                       debuggers).
  --dograb                             Force mouse grabbing (even when running
                                       in a debugger).
  --visual <id>                        ID of the X11 Visual to use.
  --geometry <geometry>                Alias for --qwindowgeometry.
  --icon <icon>                        Alias for --qwindowicon.
  --title <title>                      Alias for --qwindowtitle.

Arguments:
  [arg]                                Arguments - depending on main option


HTML kind of works in many text_ fields.
